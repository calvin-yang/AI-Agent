events {
    worker_connections 1024;
}

http {
    upstream ai_agent_backend {
        # 负载均衡配置
        least_conn;  # 最少连接数算法
        
        server web1:8002 max_fails=3 fail_timeout=30s;
        server web2:8002 max_fails=3 fail_timeout=30s;
        server web3:8002 max_fails=3 fail_timeout=30s;
    }
    
    # WebSocket代理配置
    upstream ai_agent_websocket {
        ip_hash;  # WebSocket需要会话粘性
        
        server web1:8002;
        server web2:8002;
        server web3:8002;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # WebSocket代理
        location /socket.io/ {
            proxy_pass http://ai_agent_websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket超时设置
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 86400;
        }
        
        # HTTP API代理
        location / {
            proxy_pass http://ai_agent_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 缓冲设置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # 静态文件缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://ai_agent_backend;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # 日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
}
